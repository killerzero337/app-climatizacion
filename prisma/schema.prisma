generator client {
  provider = "prisma-client-js"
}

//datasource db {
//  provider  = "postgresql"
//  url  	    = env("DATABASE_URL")
//  directUrl = env("DIRECT_URL")
//}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id            String      @id @default(cuid())
  name          String
  email         String?     @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String?     @default("USER") // o  ADMIN
  accounts      Account[]
  workspace     Workspace[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Workspace {
  id               Int      @id @default(autoincrement())
  T_ext_invierno   Float?
  T_ext_verano     Float?
  T_suelo_invierno Float?
  T_suelo_verano   Float?
  Titulo           String
  Autor_Proyecto   String
  Fecha            DateTime
  H_R_ext_invierno Float?
  H_R_ext_verano   Float?
  Ciudad           String
  Altitud          Int
  Cliente          String
  Observaciones    String?
  userId           String

  user User @relation(fields: [userId], references: [id])
}
